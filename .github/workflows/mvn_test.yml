name: Tests

on: [push]

jobs:
  run_tests:
    name: Java${{ matrix.java }} ${{ matrix.profile }} test
    runs-on: ubuntu-latest

    strategy:
      matrix:
        java: [ 8, 11 ]
        profile: ['end2end']

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Cache maven repository
        uses: actions/cache@v1
        env:
          cache-name: cache-m2
        with:
          path: ~/.m2
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: Cache npm dependencies
        uses: actions/cache@v1
        env:
          cache-name: cache-npm
        with:
          path: node_modules
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: Setup Java ${{ matrix.java }}
        uses: actions/setup-java@v1
        with:
          java-version: ${{ matrix.java }}

      - name: Test with maven
        if: matrix.profile != 'smoketest' && matrix.profile != 'functest'
        run: mvn -B clean verify -P ${{ matrix.profile}}

      - name: Smoke-test with production image
        timeout-minutes: 20
        if: matrix.profile == 'smoketest'
        env:
          JIRA_E2E_LICENSE: ${{ secrets.JIRA_E2E_LICENSE }}
          CYPRESS_AWS_ACCESS_KEY_ID: ${{ secrets.CYPRESS_AWS_ACCESS_KEY_ID }}
          CYPRESS_AWS_SECRET_ACCESS_KEY: ${{ secrets.CYPRESS_AWS_SECRET_ACCESS_KEY }}
          CYPRESS_ADMIN_PASSWORD: ${{ secrets.CYPRESS_ADMIN_PASSWORD }}
          CYPRESS_TARGET_TESTSUITE: smoketest
        run: |
          mvn package -DskipTests
          mv jira-plugin/target/jira-plugin-*.jar jira-e2e-tests/jira/
          cd jira-e2e-tests
          ./postgres/inject-license
          JIRA_VERSION=latest docker-compose up --force-recreate --build --exit-code-from cypress --abort-on-container-exit postgresql jira cypress

      - name: End to end test with production image
        timeout-minutes: 120
        if: ${{ matrix.profile == 'end2end' && matrix.java == '11' }}
        env:
          JIRA_E2E_LICENSE: ${{ secrets.JIRA_E2E_LICENSE }}
          CYPRESS_AWS_ACCESS_KEY_ID: ${{ secrets.CYPRESS_AWS_ACCESS_KEY_ID }}
          CYPRESS_AWS_SECRET_ACCESS_KEY: ${{ secrets.CYPRESS_AWS_SECRET_ACCESS_KEY }}
          CYPRESS_ADMIN_PASSWORD: ${{ secrets.CYPRESS_ADMIN_PASSWORD }}
          CYPRESS_TARGET_TESTSUITE: e2e_full_migration
        run: |
          mvn package -DskipTests
          mv jira-plugin/target/jira-plugin-*.jar jira-e2e-tests/jira/
          cd jira-e2e-tests
          ./postgres/inject-license
          JIRA_VERSION=latest docker-compose up --force-recreate --build --exit-code-from cypress --abort-on-container-exit postgresql jira cypress

      - uses: actions/upload-artifact@v2
        if: failure()
        with:
          name: cypress-results
          path: /opt/cypress/

      - name: REST API tests with production image
        timeout-minutes: 20
        if: matrix.profile == 'functest'
        env:
          JIRA_E2E_LICENSE: ${{ secrets.JIRA_E2E_LICENSE }}
          JIRA_PASSWORD: ${{ secrets.CYPRESS_ADMIN_PASSWORD }}
        run: |
          mvn package -DskipTests
          mv jira-plugin/target/jira-plugin-*.jar jira-e2e-tests/jira/
          cd jira-e2e-tests
          ./postgres/inject-license
          JIRA_VERSION=latest docker-compose up --force-recreate --build --exit-code-from functests --abort-on-container-exit postgresql jira functests

      - name: Archive code coverage results
        if: matrix.profile == '!integration' && matrix.java == 8
        uses: actions/upload-artifact@v2
        with:
          name: code-coverage-report
          path: ./**/target/site/jacoco-unit-test-coverage-report/
