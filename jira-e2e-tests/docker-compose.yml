version: '3.5'

services:
  postgresql:
    build:
      context: ./postgres
    ports:
      - '5432:5432'
    environment:
      - 'POSTGRES_DB=jira'
      - 'POSTGRES_USER=jiradb'
      - 'POSTGRES_PASSWORD=password'
      - 'POSTGRES_ENCODING=UNICODE'
      - 'POSTGRES_COLLATE=C'
      - 'POSTGRES_COLLATE_TYPE=C'
      - "LANG=C"

  jira:
    build:
      context: ./jira
      args:
        - JIRA_VERSION
    depends_on:
      - postgresql
    ports:
      - '2990:8080'
      - '5005:5005'
    environment:
      - 'ATL_JDBC_URL=jdbc:postgresql://postgresql/jira'
      - 'ATL_JDBC_USER=jiradb'
      - 'ATL_JDBC_PASSWORD=password'
      - 'ATL_DB_DRIVER=org.postgresql.Driver'
      - 'ATL_DB_TYPE=postgres72'
      - 'ATL_TOMCAT_CONTEXTPATH=/jira'
      # See .env file for default, run-local for dev settings
      - JVM_SUPPORT_RECOMMENDED_ARGS=${JVM_SUPPORT_RECOMMENDED_ARGS}
    command: >
      bash -c '
          waitport postgresql 5432 &&
          chown -R jira.jira  /var/atlassian/application-data/jira/ &&
          /entrypoint.py
      '

  cypress:
    ipc: host
    build:
      context: ./cypress
    environment:
      - CYPRESS_AWS_ACCESS_KEY_ID=${CYPRESS_AWS_ACCESS_KEY_ID}
      - CYPRESS_AWS_SECRET_ACCESS_KEY=${CYPRESS_AWS_SECRET_ACCESS_KEY}
      - CYPRESS_ADMIN_PASSWORD=${CYPRESS_ADMIN_PASSWORD}
      - CYPRESS_TARGET_TESTSUITE=${CYPRESS_TARGET_TESTSUITE}
    volumes:
      - "/tmp/cypress/screenshots:/opt/cypress/screenshots"
      - "/tmp/cypress/videos:/opt/cypress/videos"
    command: >
      bash -c "
          cd /opt/cypress &&
          yarn install &&
          jira-wait http://jira:8080/jira/ &&
          yarn test --spec integration/${CYPRESS_TARGET_TESTSUITE}.ts
      "

  functests:
    build:
      context: ./func-tests
    environment:
      - 'JIRA_BASE_URL=http://jira:8080/jira'
      - JIRA_PASSWORD=${JIRA_PASSWORD}
    volumes:
      - ~/.m2:/root/.m2
    command: >
      bash -c '
          cd /opt/func-tests &&
          mvn dependency:resolve dependency:resolve-plugins &&
          jira-wait http://jira:8080/jira/ &&
          mvn verify
      '
